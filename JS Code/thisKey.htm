<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>this keyword</title>
</head>
<body>
    <script>
        "use strict";
        const jonas = {
            firstName: "Jonas",
            year: 1991, 
            calcAge: function () {
                // console.log(this);
                console.log(2037-this.year);

                // SOLUTION 1
            //     const self = this;
            //     const isMillenial = function(){
            //         console.log(self);
            //         console.log(self.year >= 1981 && self.year <= 1996);
            //     };
            //     isMillenial();
            // },

            // SOLUTION 2
            // ARROW FUNCTIONS DONT GET THEIR OWN THIS KEYWORD; THEY USE THE THIS KEYWORD OF THEIR PARENT SCOPE 

                const isMillenial =() =>{
                    console.log(this);
                    console.log(this.year >= 1981 && this.year <= 1996);
                };
                isMillenial();
            },

            greet:  () => {
                console.log(this);
                console.log(`Hey ${jonas.firstName}`);
        },
    };
        jonas.greet();
        jonas.calcAge();
        // BEST PRACTICE: NEVER USE AN ARROW FUNCTION AS A METHOD 
         
        // ARGUMENTS:
        const addExpr = function(a,b){
            console.log(arguments);
            return a +b; 
        };
        addExpr(2,5);

        var addArrow = (a,b) =>{
            console.log(arguments);
            return a+b;
        } ;
        addArrow(2,5,8);















































        // // console.log(this);
        // const calAge = function(birthYear){
        //     console.log(2037-birthYear);
        //     console.log(this);
        // }
        // calAge(1991);

        // // arrow function 
        // const calAgeArrow = birthYear => {
        //     console.log(2037-birthYear);
        //     console.log(this);
        // }
        // calAge(1980);

        // const jonas = {
        //     year : 1991,
        //     calcAge: function () {
        //         console.log(this);
        //         console.log(2037-this.year);
        //     },
        // };
        // jonas.calcAge();

        // const matilda={
        //     year: 2017,
        // };

        // matilda.calcAge = jonas.calcAge;
        // matilda.calcAge();

        // const f = jonas.calcAge;
        // f();
        
    </script>
</body>
</html>